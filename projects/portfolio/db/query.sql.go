// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: query.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO user (uid, name, email) VALUES (?, ?, ?)
`

type CreateUserParams struct {
	Uid   string
	Name  string
	Email string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.ExecContext(ctx, createUser, arg.Uid, arg.Name, arg.Email)
	return err
}

const getUser = `-- name: GetUser :one

SELECT uid, name, email, created, updated FROM user WHERE uid = ? LIMIT 1
`

// sqlc generate -f ./projects/portfolio/sqlc.yaml
func (q *Queries) GetUser(ctx context.Context, uid string) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, uid)
	var i User
	err := row.Scan(
		&i.Uid,
		&i.Name,
		&i.Email,
		&i.Created,
		&i.Updated,
	)
	return i, err
}
